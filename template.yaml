AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Runtime: python3.8
    Timeout: 6
    Environment:
      Variables:
        SERVICE_NAME: HR-slack-bot
        ROOT_WORKSPACE_ID_SSM_PARAM: "/hr-slack-bot/workspace-id"
        ROOT_BOT_HEALTH_CHANNEL_ID_SSM_PARAM: "/hr-slack-bot/health-channel-id"
        USER_VACATIONS_TABLE_NAME:
          Ref: UserVacationsTable

Resources:
# Lambdas

  # Layers
  MainLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: main_layer
      ContentUri: src/layers/main_layer
      CompatibleRuntimes:
        - python3.8
    Metadata:
      BuildMethod: python3.8

  # Functions
  ProcessInteractivity:
    Type: AWS::Serverless::Function
    Properties:
      Timeout: 10
      CodeUri: src/handlers/process_interactivity
      Handler: index.process_interactivity
      Layers:
        - !Ref MainLayer
      Events:
        InteractivityAction:
          Type: Api
          Properties:
            Path: /process_interactivity
            Method: post
      Policies:
        - Statement:
          - Sid: DynamodbPolicy
            Effect: Allow
            Action:
              - "dynamodb:GetItem"
              - "dynamodb:PutItem"
              - "dynamodb:Query"
              - "dynamodb:UpdateItem"
              - "dynamodb:DescribeTable"
            Resource: !GetAtt UserVacationsTable.Arn
          - Sid: SsmPolicy
            Effect: Allow
            Action:
              - "ssm:GetParameter"
            Resource: "*"

  ProcessVacationsStream:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/handlers/streams_processors/vacations
      Handler: index.process_vacations
      Layers:
        - !Ref MainLayer
      Events:
        VacationsEvent:
          Type: DynamoDB
          Properties:
            StartingPosition: LATEST
            Stream: !GetAtt UserVacationsTable.StreamArn
      Policies:
        - Statement:
          - Sid: DynamodbPolicy
            Effect: Allow
            Action:
              - "dynamodb:GetItem"
              - "dynamodb:DeleteItem"
              - "dynamodb:UpdateItem"
            Resource: !GetAtt UserVacationsTable.Arn
          - Sid: SsmPolicy
            Effect: Allow
            Action:
              - "ssm:GetParameter"
            Resource: "*"

  RegisterNewWorkspace:
    Type: AWS::Serverless::Function
    Properties:
      Timeout: 12
      CodeUri: src/handlers/register_new_workspace
      Handler: index.register_new_workspace
      Environment:
        Variables:
          CLIENT_ID_SSM_PARAM: "/hr-slack-bot/client-id"
          CLIENT_SECRET_SSM_PARAM: "/hr-slack-bot/client-secret"
      Layers:
        - !Ref MainLayer
      Events:
        WorkspaceRegistration:
          Type: Api
          Properties:
            Path: /register_new_workspace
            Method: get
      Policies:
        - Statement:
          - Sid: DynamodbPolicy
            Effect: Allow
            Action:
              - "dynamodb:PutItem"
            Resource: !GetAtt UserVacationsTable.Arn
          - Sid: SsmPolicy
            Effect: Allow
            Action:
              - "ssm:GetParameter"
            Resource: "*"

# DynamoDB
  UserVacationsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
        - AttributeName: vacation_status
          AttributeType: S
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
        - IndexName: gsi1
          KeySchema:
            - AttributeName: vacation_status
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
